{"version":3,"sources":["src/app/start-screen.js"],"names":["w","h","canvas","document","getElementById","c","getContext","setCanvasExtents","body","clientWidth","clientHeight","width","height","window","onresize","prevTime","makeStars","count","out","i","s","x","Math","random","y","z","push","stars","clear","fillStyle","fillRect","putPixel","brightness","intensity","rgb","moveStars","distance","length","init","time","requestAnimationFrame","tick","elapsed","cx","cy","star","d"],"mappings":";AAAA,IAGIA,EACAC,EAJEC,EAASC,SAASC,eAAe,UACjCC,EAAIH,EAAOI,WAAW,MAKtBC,EAAmB,WACvBP,EAAIG,SAASK,KAAKC,YAClBR,EAAIE,SAASK,KAAKE,aAClBR,EAAOS,MAAQX,EACfE,EAAOU,OAASX,GAGlBM,IAEAM,OAAOC,SAAW,WAChBP,KAGF,IAsCIQ,EAtCEC,EAAY,SAACC,GAER,IADDC,IAAAA,EAAM,GACDC,EAAE,EAAEA,EAAEF,EAAME,IAAI,CACjBC,IAAAA,EAAI,CACRC,EAAiB,KAAdC,KAAKC,SAAc,IACtBC,EAAiB,IAAdF,KAAKC,SAAa,IACrBE,EAAiB,IAAdH,KAAKC,UAEZL,EAAIQ,KAAKN,GAEJF,OAAAA,GAGLS,EAAQX,EAAU,KAEhBY,EAAQ,WACZvB,EAAEwB,UAAY,QACdxB,EAAEyB,SAAS,EAAG,EAAG5B,EAAOS,MAAOT,EAAOU,SAGlCmB,EAAW,SAACV,EAAGG,EAAGQ,GAChBC,IAAAA,EAAyB,IAAbD,EACZE,EAAM,OAASD,EAAY,IAAMA,EAAY,IAAMA,EAAY,IACrE5B,EAAEwB,UAAYK,EACd7B,EAAEyB,SAAST,EAAGG,EAAG,EAAG,IAGhBW,EAAY,SAACC,GAEZ,IADCnB,IAAAA,EAAQU,EAAMU,OACXlB,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CACxBC,IAAAA,EAAIO,EAAMR,GAETC,IADPA,EAAEK,GAAKW,EACAhB,EAAEK,GAAK,GACZL,EAAEK,GAAK,MAMTa,EAAO,SAAAC,GACXxB,EAAWwB,EACXC,sBAAsBC,IAGxBD,sBAAsBF,GAEtB,IAAMG,EAAO,SAAPA,EAAOF,GACLG,IAAAA,EAAUH,EAAOxB,EACrBA,EAAWwB,EAEXJ,EAAkB,IAARO,GAEVd,IAMK,IAJCe,IAAAA,EAAK3C,EAAE,EACP4C,EAAK3C,EAAE,EAEPgB,EAAQU,EAAMU,OACXlB,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CACxB0B,IAAAA,EAAOlB,EAAMR,GAEbE,EAAIsB,EAAKE,EAAKxB,GAAY,KAATwB,EAAKpB,GACtBD,EAAIoB,EAAKC,EAAKrB,GAAY,KAATqB,EAAKpB,GAExBJ,KAAAA,EAAI,GAAKA,GAAKrB,GAAKwB,EAAI,GAAKA,GAAKvB,GAAjCoB,CAIEyB,IAAAA,EAAKD,EAAKpB,EAAE,IAGlBM,EAASV,EAAGG,EAFF,EAAEsB,EAAEA,IAKhBN,sBAAsBC","file":"start-screen.4c8e6c22.js","sourceRoot":"..","sourcesContent":["const canvas = document.getElementById(\"canvas\");\nconst c = canvas.getContext(\"2d\");\n\nlet w;\nlet h;\n\nconst setCanvasExtents = () => {\n  w = document.body.clientWidth;\n  h = document.body.clientHeight;\n  canvas.width = w;\n  canvas.height = h;\n};\n\nsetCanvasExtents();\n    \nwindow.onresize = () => {\n  setCanvasExtents();\n};\n\nconst makeStars = (count) => {\n    const out = [];\n      for (let i=0;i<count;i++){\n        const s = {\n          x: Math.random()*1600-800,\n          y: Math.random()*900-450,\n          z: Math.random()*1000\n        };\n      out.push(s);\n    }\n    return out;\n  }\n  \n  let stars = makeStars(5000);\n\n  const clear = () => {\n    c.fillStyle = \"black\";\n    c.fillRect(0, 0, canvas.width, canvas.height);\n  };\n\n  const putPixel = (x, y, brightness) => {\n    const intensity = brightness * 255;\n    const rgb = \"rgb(\" + intensity + \",\" + intensity + \",\" + intensity + \")\";\n    c.fillStyle = rgb;\n    c.fillRect(x, y, 1, 1);\n  };\n\n  const moveStars = (distance) => {\n    const count = stars.length;\n    for (var i = 0; i < count; i++) {\n      const s = stars[i];\n      s.z -= distance;\n      while (s.z <= 1){\n        s.z += 1000;\n      }\n    }\n  }\n\nlet prevTime;\nconst init = time => {\n  prevTime = time;\n  requestAnimationFrame(tick);\n};\n\nrequestAnimationFrame(init);\n\nconst tick = time => {\n    let elapsed = time - prevTime;\n    prevTime = time;\n  \n    moveStars(elapsed*0.16);\n  \n    clear();\n  \n    const cx = w/2;\n    const cy = h/2;\n  \n    const count = stars.length;\n    for (var i = 0; i < count; i++) {\n      const star = stars[i];\n  \n      const x = cx + star.x/(star.z * 0.001);\n      const y = cy + star.y/(star.z * 0.001);\n  \n      if (x < 0 || x >= w || y < 0 || y >= h){\n        continue;\n      }\n  \n      const d = (star.z/1000.0)\n      const b = 1-d*d\n  \n      putPixel(x, y, b);\n    }\n  \n    requestAnimationFrame(tick);\n  };"]}